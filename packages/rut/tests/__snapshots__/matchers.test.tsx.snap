// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matchers toBeNodeType() class-component type errors when types dont match (not negation) 1`] = `"expected \`ClassComp\` not to be a \\"class-component\\""`;

exports[`matchers toBeNodeType() class-component type errors when types dont match 1`] = `"expected \`ClassComp\` to be a \\"root\\""`;

exports[`matchers toBeNodeType() context-consumer type errors when types dont match (not negation) 1`] = `"toBeNodeType: Expected a Rut \`Element\`."`;

exports[`matchers toBeNodeType() context-consumer type errors when types dont match 1`] = `"toBeNodeType: Expected a Rut \`Element\`."`;

exports[`matchers toBeNodeType() errors if an invalid node type 1`] = `"toBeNodeType: Invalid node type \\"unknown-type\\", expected one of: class-component, context-consumer, context-provider, forward-ref, fragment, function-component, host-component, indeterminate-component, lazy, memo, mode, portal, profiler, root, suspense, text"`;

exports[`matchers toBeNodeType() forward-ref type errors when types dont match (not negation) 1`] = `"Cannot convert object to primitive value"`;

exports[`matchers toBeNodeType() forward-ref type errors when types dont match 1`] = `"Cannot convert object to primitive value"`;

exports[`matchers toBeNodeType() fragment type errors when types dont match 1`] = `"expected \`div\` to be a \\"root\\""`;

exports[`matchers toBeNodeType() function-component type errors when types dont match (not negation) 1`] = `"expected \`FuncComp\` not to be a \\"function-component\\""`;

exports[`matchers toBeNodeType() function-component type errors when types dont match 1`] = `"expected \`FuncComp\` to be a \\"root\\""`;

exports[`matchers toBeNodeType() host-component type errors when types dont match (not negation) 1`] = `"expected \`div\` not to be a \\"host-component\\""`;

exports[`matchers toBeNodeType() host-component type errors when types dont match 1`] = `"expected \`div\` to be a \\"root\\""`;
